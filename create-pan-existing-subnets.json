{
  "Description": "Create Palo Alto VM Series with custom subnets",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "Author": "Sam Ghardashem Aviatrix  Systems",
    "Version": "1",
    "Version Notes": "",
    "Verified Date": "2/29/2019",
    "Comments": "",
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Firewall Configuration" },
          "Parameters" : [ "SelectVPC","SourceNet","FWInstanceSize","SSHKeyPair"]
        },
        {
          "Label" : { "default" : "Interface and Subnets" },
          "Parameters" : [  "deployHA","FW1Eth0Subnet","FW1Eth1Subnet","FW1Eth2Subnet","FW1Eth3Subnet"]
        }
      ],
      "ParameterLabels" : {
        "SelectVPC" : { "default" : "Select VPC" },
        "FWInstanceSize":{ "default" : "FW Instance Size"},
        "FW1Eth0Subnet": {"default" : "FW Management Subnet"},
        "FW1Eth1Subnet": {"default": "FW Eth1 Subnet(North)"},
        "FW1Eth2Subnet": {"default": "FW Eth2 Subnet(South)"},
        "FW1Eth3Subnet": {"default": "FW Eth3 Subnet(Egress and Ingress"},
        "FWInstanceAMI": {"default" : "Firewall AMI. Defaults to AMI in us-east-2" },
        "deployHA": {"default" : "Deploy HA FW?. *Experimental"    },   
        "SourceNet":{"default" : "Specify your public IP"},
        "SSHKeyPair": {"default": "SSH Keypair to Use"}
      }
    }
  },
  "Mappings": {
        "vBladePerformanceMap" : {
              "High" : { "InstanceType" : "c4.4xlarge"},
              "Med" : { "InstanceType" : "r4.4xlarge"}
        },
        "ControllerPerformanceMap" : {
              "High" : { "InstanceType" : "m4.2xlarge"},
              "Med" : { "InstanceType" : "m4.xlarge"}

        },
        "AMIRegionMap" : {
          "us-east-1"      : { "HVM64" : "ami-ce01c0b3"},
          "us-east-2"      : { "HVM64" : "ami-10f3c575"},
          "us-west-1"      : { "HVM64" : "ami-235b4f43"},
          "us-west-2"      : { "HVM64" : "ami-8a22b3f2"}
        }
      },
  "Parameters": {
    "SelectVPC": {
      "Type": "AWS::EC2::VPC::Id",
      "AllowedPattern": ".+",
      "Description": "Please select VPC"
    },
    "deployHA": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": ""
    }, 
    "FWInstanceAMI": {
      "Type": "String",
      "AllowedPattern": ".+",
      "Description": "Provide the Firewall AMI from Marketplace",
      "Default":"ami-0ceaa612d0b411526"
    },
    "SourceNet": {
      "Type": "String",
      "Description": "This specificies the network address that's allowed to talk to FW's management subnet. If not available, it will default to 0.0.0.0/0",
      "Default": "0.0.0.0/0"
    },    
    "FWInstanceSize": {
      "Type": "String",
      "Default": "m4.xlarge",
      "AllowedValues": [
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.18xlarge"

      ],
      "Description": "Instance type for Firewall."
    }, 
    "SSHKeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "***IMPORTANT*** An Amazon EC2 Key Pair is required to gain SSH access to your FW instances after they are created. Choose one of your existing Key Pairs from the drop-down. If you don't already have a Key Pair, please create one and reload the template",
      "AllowedPattern": ".+"
    },
    "User": {
      "Default": "CloudUser",
      "Description": "Please specify a simple username that will be used for tagging instances",
      "Type": "String"
    },
    "FW1Eth0Subnet": {
      "Description": "Subnet for Interface 1",
      "Type": "AWS::EC2::Subnet::Id",
      "AllowedPattern": ".+",
      "ConstraintDescription": "Subnet must be selecte"
    },
    "FW1Eth1Subnet": {
      "Description": "Subnet for Interface 2",
      "Type": "AWS::EC2::Subnet::Id",
      "AllowedPattern": ".+",
      "ConstraintDescription": "Subnet must be selecte"
    },
    "FW1Eth2Subnet": {
      "Description": "Subnet for Interface 3",
      "Type": "AWS::EC2::Subnet::Id",
      "AllowedPattern": ".+",
      "ConstraintDescription": "Subnet must be selecte"
    },
    "FW1Eth3Subnet": {
      "Description": "Subnet for Interface 4",
      "Type": "AWS::EC2::Subnet::Id",
      "AllowedPattern": ".+",
      "ConstraintDescription": "Subnet must be selecte"
    }
  },
  "Conditions": {
    "BPSPerformanceSelectionHigh": {
        "Fn::Equals" : [{"Ref" : "deployHA"}, "Yes"]
    }
  },
  "Resources": {
    "FW1Eth0": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "FW1 Eth0",
        "SubnetId": {
          "Ref": "FW1Eth0Subnet"
        },
        "GroupSet": [
          {
            "Ref": "FWMgmtSG"
          }
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": {"Ref" : "AWS::StackName"}
          },
          {
            "Key": "Creator",
            "Value": {
              "Ref": "User"
            }
          }
        ]
      }
    },
    "FW1Eth1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "FW1 Eth1",
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "FW1Eth1Subnet"
        },
        "GroupSet": [
          {
            "Ref": "FWInternalSG"
          }
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": {"Ref" : "AWS::StackName"}
          },
          {
            "Key": "Creator",
            "Value": {
              "Ref": "User"
            }
          }
        ]
      }
    },
    "FW1Eth2": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "FW1 Eth2",
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "FW1Eth2Subnet"
        },
        "GroupSet": [
          {
            "Ref": "FWInternalSG"
          }
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": {"Ref" : "AWS::StackName"}
          },
          {
            "Key": "Creator",
            "Value": {
              "Ref": "User"
            }
          }
        ]
      }
    },
    "FW1Eth3": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "FW1 Eth2",
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "FW1Eth3Subnet"
        },
        "GroupSet": [
          {
            "Ref": "FWEgressSG"
          }
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": {"Ref" : "AWS::StackName"}
          },
          {
            "Key": "Creator",
            "Value": {
              "Ref": "User"
            }
          }
        ]
      }
    },
    "FW1Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-ce01c0b3",
        "InstanceType": {
          "Ref": "FWInstanceSize"
        },
        "KeyName": {
          "Ref": "SSHKeyPair"
        },
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "CloudLensFlag",
            "Value": "Tool"
          },
          {
            "Key": "CloudLensEnabled",
            "Value": "True"
          },
          {
            "Key": "ToolType",
            "Value": "Eastwind"
          },
          {
            "Key": "Name",
            "Value": "DMZ-Firewall-1"
          },
          {
            "Key": "StackName",
            "Value": {"Ref" : "AWS::StackName"}
          },
          {
            "Key": "Creator",
            "Value": {
              "Ref": "User"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": {
              "Ref": "FW1Eth0"
            },
            "DeviceIndex": "0"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "FW1Eth1"
            },
            "DeviceIndex": "1"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "FW1Eth2"
            },
            "DeviceIndex": "2"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "FW1Eth3"
            },
            "DeviceIndex": "3"
          }

        ]
      }
    },
    "elasticIP1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "SelectVPC"
      }
    },
    "elasticIP2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "SelectVPC"
      }
    },
    "elasticIP3": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
      "Domain": "SelectVPC"
      }
    },
    "FW1Eth0EIPassoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "elasticIP1",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "FW1Eth0"
        }
      },
      "DependsOn": [
        "FW1Instance"
      ]
    },
    "FW1Eth3EIPassoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "elasticIP2",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "FW1Eth3"
        }
      }
    },
  "FWMgmtSG": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Opens ports needed FW Management",
      "VpcId": {
        "Ref": "SelectVPC"
      }
    }
  },
  "FWInternalSG": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Opens ports needed FW Management",
      "VpcId": {
        "Ref": "SelectVPC"
      }
    }
  },
  "FWEgressSG": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Opens ports needed FW Management",
      "VpcId": {
        "Ref": "SelectVPC"
      }
    }
  },
  "FWMgmtSGingress1": {
    "Type": "AWS::EC2::SecurityGroupIngress",
    "Properties": {
      "GroupId": {
        "Ref": "FWMgmtSG"
      },
      "IpProtocol": "tcp",
      "FromPort": "22",
      "ToPort": "22",
      "CidrIp": {
        "Ref": "SourceNet"
      }
    }
  },
  "FWMgmtSGingress2": {
    "Type": "AWS::EC2::SecurityGroupIngress",
    "Properties": {
      "GroupId": {
        "Ref": "FWMgmtSG"
      },
      "IpProtocol": "tcp",
      "FromPort": "443",
      "ToPort": "443",
      "CidrIp": "0.0.0.0/0"
    }
  },
    "FWInternalSGingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "FWInternalSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.0.0.0/8"
      }
    },
      "FWInternalSGingress2": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "FWInternalSG"
          },
          "IpProtocol": "-1",
          "CidrIp": "172.16.0.0/12"
        }
      },
        "FWInternalSGingress3": {
          "Type": "AWS::EC2::SecurityGroupIngress",
          "Properties": {
            "GroupId": {
              "Ref": "FWInternalSG"
            },
            "IpProtocol": "-1",
            "CidrIp": "192.168.0.0/16"
          }
        },
          "FWEgressSGingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
              "GroupId": {
                "Ref": "FWEgressSG"
              },
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          },
          "FWEgressSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
              "GroupId": {
                "Ref": "FWEgressSG"
              },
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          }
        },
  "Outputs": {
    "FW1ManagementIP": { 
      "Description": "IP of BPS UI",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "FW1Instance",
                "PublicDnsName"
              ]
            }
          ]
        ]
      }
    }
  }
}
